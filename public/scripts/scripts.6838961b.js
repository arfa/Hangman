"use strict";var underscore=angular.module("underscore",[]);underscore.factory("_",function(){return window._}),angular.module("hangmanApp",["ngAnimate","ngRoute","underscore"]).config(["$routeProvider","$locationProvider",function(a,b){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main",resolve:{words:["$http",function(a){return a({method:"GET",url:"words.json"})}]}}).otherwise({redirectTo:"/"}),b.html5Mode(!0)}]),angular.module("hangmanApp").filter("letters",["_",function(a){return function(b){return a.map(b.split(""),function(a){return{name:a,chosen:!1}})}}]),angular.module("hangmanApp").controller("MainCtrl",["dictionaryProvider","words","$templateCache",function(a,b,c){a.setWords(b),this.missesAllowed=a.getMissesAllowed(),this.word={value:a.getRandomWord()},this.getRandomWord=function(){this.word.value=a.getRandomWord(),console.log(this.word)}}]),angular.module("hangmanApp").provider("dictionaryProvider",function(){function a(){this.getMissesAllowed=function(){return b},this.getRandomWord=function(){var a=Math.floor(Math.random()*c.length);return c[a]},this.setWords=function(a){c=a.data}}var b=7,c=[];this.setMissesAllowed=function(a){b=a},this.$get=function(){return new a}}),angular.module("hangmanApp").directive("hangman",function(){return{templateUrl:"views/hangman.html",restrict:"E",scope:{word:"=",missesAllowed:"=",getRandomWord:"&"},controllerAs:"hangman",bindToController:!0,controller:["lettersFilter","_",function(a,b){console.log(this.word.value),this.revealSecret=function(){b.each(this.secretWord,function(a){a.chosen=!0})},this.checkForEndOfGame=function(){this.win=b.reduce(this.secretWord,function(a,b){return a&&b.chosen},!0),this.win||this.numMisses!==this.missesAllowed||(this.lost=!0,this.revealSecret())},this.reset=function(){b.each(this.letters,function(a){a.chosen=!1}),this.secretWord=a(this.word.value),this.numMisses=0,this.win=!1,this.lost=!1},this.reset(),this.newGame=function(){this.getRandomWord(),this.reset()},this["try"]=function(a){a.chosen=!0;var c=!1;b.each(this.secretWord,function(b){a.name.toUpperCase()===b.name.toUpperCase()&&(b.chosen=!0,c=!0)}),c||this.numMisses++,this.checkForEndOfGame()},this.letters=a("abcdefghijklmnopqrstuvwxyz")}],link:function(a,b,c){console.log(a)}}}),angular.module("hangmanApp").directive("keyboard",function(){return{restrict:"A",link:function(a,b,c){document.onkeyup=function(a){console.log(a);var c=String.fromCharCode(a.keyCode);if(c.match(/^[a-zA-Z]*$/))for(var d=angular.element(b).find("button"),e=d.length-1;e>=0;e--){var f=angular.element(d[e]);if(f.text().toLowerCase()===c.toLowerCase()){f.triggerHandler("click");break}}}}}}),angular.module("hangmanApp").directive("newGame",function(){return{restrict:"A",link:function(a,b,c){angular.element(document).on("onkeyup",function(a){(32===a.keyCode||13===a.keyCode)&&angular.element(b).triggerHandler("click")})}}}),angular.module("hangmanApp").run(["$templateCache",function(a){a.put("views/hangman.html",'<div class="container-fluid"> <div class="well"> <div class="secretWord"> <ul class="list-inline"> <li ng-repeat="letter in hangman.secretWord"> <span ng-hide="letter.chosen">_</span> <span ng-show="letter.chosen">{{ letter.name }}</span> </li> </ul> <div class="letters"> <ul class="list-inline"> <li ng-repeat="letter in hangman.letters"> <button class="btn btn-primary letter-button" ng-disabled="letter.chosen || hangman.lost || hangman.win" ng-click="hangman.try(letter);">{{letter.name}}</button> </li> </ul> </div> <p> <span ng-hide="hangman.win || hangman.lost">Il vous reste {{ hangman.missesAllowed - hangman.numMisses }} coups.</span> <span ng-show="hangman.win">Bien jou√©!</span> <span ng-show="hangman.lost">Vous avez perdu, essaiez encore une fois!</span> </p> </div> </div> <button ng-click="hangman.newGame();" class="btn btn-success btn-large" new-game>Nouveau Jeu</button> </div>'),a.put("views/main.html",'<hangman misses-allowed="main.missesAllowed" word="main.word" get-random-word="main.getRandomWord()" keyboard></hangman>')}]);